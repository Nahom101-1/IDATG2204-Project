{"ast":null,"code":"var _jsxFileName = \"/Users/fredrikwiik/Desktop/BPROG/2. A\\u030AR/V25/IDATG2204 - Datamodellering og databaser/IDATG2204-Project/client/src/Components/ItemList/ItemList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport './ItemList.css';\nimport testData from \"../Assets/test.json\";\nimport ProductItem from \"../ProductItem/ProductItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemList = () => {\n  _s();\n  // 1) Pre-parse prices and ensure each item has a unique `id`\n  const items = useMemo(() => testData.map(item => ({\n    id: item.id,\n    // assumes your JSON has an `id` field\n    image: item.image,\n    name: item.name,\n    price: Number(item.price),\n    quantity: item.quantity\n  })), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cont\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: \"ElectroMart - Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-list-container\",\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(ProductItem, {\n          image: item.image,\n          name: item.name,\n          price: item.price,\n          quantity: item.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(ItemList, \"JuH2Tip3cwnoihIGVm6QoIvsF5k=\");\n_c = ItemList;\nexport default _c2 = /*#__PURE__*/React.memo(ItemList);\nvar _c, _c2;\n$RefreshReg$(_c, \"ItemList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useMemo","testData","ProductItem","jsxDEV","_jsxDEV","ItemList","_s","items","map","item","id","image","name","price","Number","quantity","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","memo","$RefreshReg$"],"sources":["/Users/fredrikwiik/Desktop/BPROG/2. AÌŠR/V25/IDATG2204 - Datamodellering og databaser/IDATG2204-Project/client/src/Components/ItemList/ItemList.jsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport './ItemList.css';\nimport testData from \"../Assets/test.json\";\nimport ProductItem from \"../ProductItem/ProductItem\";\n\nconst ItemList: React.FC = () => {\n    // 1) Pre-parse prices and ensure each item has a unique `id`\n    const items = useMemo(\n        () =>\n            testData.map(item => ({\n                id: item.id,               // assumes your JSON has an `id` field\n                image: item.image,\n                name: item.name,\n                price: Number(item.price),\n                quantity: item.quantity\n            })),\n        []\n    );\n\n    return (\n        <div className=\"cont\">\n            <div className=\"info\">ElectroMart - Products</div>\n            <div className=\"item-list-container\">\n                {items.map(item => (\n                    <div className=\"item-wrapper\" key={item.id}>\n                        <ProductItem\n                            image={item.image}\n                            name={item.name}\n                            price={item.price}\n                            quantity={item.quantity}\n                        />\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default React.memo(ItemList);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,OAAO,gBAAgB;AACvB,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,WAAW,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B;EACA,MAAMC,KAAK,GAAGP,OAAO,CACjB,MACIC,QAAQ,CAACO,GAAG,CAACC,IAAI,KAAK;IAClBC,EAAE,EAAED,IAAI,CAACC,EAAE;IAAgB;IAC3BC,KAAK,EAAEF,IAAI,CAACE,KAAK;IACjBC,IAAI,EAAEH,IAAI,CAACG,IAAI;IACfC,KAAK,EAAEC,MAAM,CAACL,IAAI,CAACI,KAAK,CAAC;IACzBE,QAAQ,EAAEN,IAAI,CAACM;EACnB,CAAC,CAAC,CAAC,EACP,EACJ,CAAC;EAED,oBACIX,OAAA;IAAKY,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBb,OAAA;MAAKY,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClDjB,OAAA;MAAKY,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAC/BV,KAAK,CAACC,GAAG,CAACC,IAAI,iBACXL,OAAA;QAAKY,SAAS,EAAC,cAAc;QAAAC,QAAA,eACzBb,OAAA,CAACF,WAAW;UACRS,KAAK,EAAEF,IAAI,CAACE,KAAM;UAClBC,IAAI,EAAEH,IAAI,CAACG,IAAK;UAChBC,KAAK,EAAEJ,IAAI,CAACI,KAAM;UAClBE,QAAQ,EAAEN,IAAI,CAACM;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B;MAAC,GAN6BZ,IAAI,CAACC,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOrC,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACf,EAAA,CA/BID,QAAkB;AAAAiB,EAAA,GAAlBjB,QAAkB;AAiCxB,eAAAkB,GAAA,gBAAexB,KAAK,CAACyB,IAAI,CAACnB,QAAQ,CAAC;AAAC,IAAAiB,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}